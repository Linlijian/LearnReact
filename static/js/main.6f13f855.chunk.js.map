{"version":3,"sources":["Person/Person.css","Person/Person.js","Validate/Validate.js","CharCard/CharCard.js","MasterPage/App.js","serviceWorker.js","index.js","MasterCss/App.css"],"names":["module","exports","Person","props","react_default","a","createElement","className","css","onClick","click","name","children","onChange","change","Radium","validateLength","textLength","CharCard","delete","style","display","padding","margin","border","textAlign","backgroundColor","@media (min-width: 500px)","width","varchar","App","state","age","person","id","isShowDiv","isShowAssignment","inputValues","onClickShowDiv","show","_this","setState","onClickShowAssignment","onChickDelete","personIndex","splice","onChickDeleteCard","index","card","split","newCard","join","inputChangeHendler","event","target","value","onChangeName","perosIndex","findIndex","p","perosnNew","Object","objectSpread","toConsumableArray","_this2","this","colorBtn","color",":hover","Assignment","map","src_Person_Person","key","charList","ch","src_CharCard_CharCard","type","src_Validate_Validate","length","classes","push","red","bold","Component","Boolean","window","location","hostname","match","ReactDOM","render","MasterPage_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","App-logo","App-logo-spin","App-header","App-link"],"mappings":"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","file":"static/js/main.6f13f855.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Person\":\"Person_Person__27NzE\"};","import React from 'react';\r\nimport css from './Person.css';\r\n\r\n\r\nconst Person = (props) => {\r\n\r\n    return (\r\n        <div className={css.Person}>\r\n            <p onClick={props.click}>Person this here. My name {props.name}</p>\r\n            <p>{props.children}</p>\r\n            <input onChange={props.change}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person;","import React from 'react';\r\nimport Radium from 'radium'\r\nconst Validate = (props) => {\r\n    let validateLength = 'Text too short'\r\n    if (props.textLength > 5) {\r\n        validateLength = 'Text too enough'\r\n    }\r\n    return <div>\r\n        {validateLength}\r\n    </div>\r\n}\r\n\r\nexport default Radium(Validate)","import React from 'react';\r\n\r\nconst CharCard = (props) => {\r\n    const style = {\r\n        display: 'inline-block',\r\n        padding: '16px',\r\n        margin: '16px',\r\n        border: '2px solid block',\r\n        textAlign: 'center',\r\n        backgroundColor: 'yellow',\r\n        '@media (min-width: 500px)': {\r\n            width: '20px'\r\n        }\r\n    }\r\n    return (\r\n        <div onClick={props.delete} style={style}>{props.varchar}</div>\r\n    )\r\n}\r\n\r\nexport default CharCard","import React, { Component } from 'react';\r\nimport css from '../MasterCss/App.css';\r\nimport '../Person/Person';\r\nimport Person from '../Person/Person';\r\nimport Validate from '../Validate/Validate';\r\nimport CharCard from '../CharCard/CharCard';\r\n\r\n\r\nclass App extends Component {\r\n  // this state area\r\n  state = {\r\n    name: 'A',\r\n    age: 23,\r\n    person: [\r\n      { id: 'asw', name: 'Meiio', age: 19 },\r\n      { id: 'wqd', name: 'Pori', age: 9 },\r\n      { id: 'dfr', name: 'Kiro', age: 10 }\r\n    ],\r\n    isShowDiv: false,\r\n    isShowAssignment: false,\r\n    inputValues: ''\r\n  }\r\n\r\n  onClickShowDiv = () => {\r\n    const show = this.state.isShowDiv\r\n    this.setState({ isShowDiv: !show })\r\n  }\r\n\r\n  onClickShowAssignment = () => {\r\n    const show = this.state.isShowAssignment\r\n    this.setState({ isShowAssignment: !show })\r\n  }\r\n\r\n  onChickDelete = (personIndex) => {\r\n    const person = this.state.person\r\n    person.splice(personIndex, 1)\r\n    this.setState({ person: person })\r\n  }\r\n\r\n  onChickDeleteCard = (index) => {\r\n    const card = this.state.inputValues.split('')\r\n    card.splice(index, 1)\r\n    const newCard = card.join('')\r\n    this.setState({ inputValues: newCard })\r\n  }\r\n\r\n  inputChangeHendler = (event) => {\r\n    this.setState({ inputValues: event.target.value })\r\n  }\r\n\r\n  onChangeName = (event, id) => {\r\n    const perosIndex = this.state.person.findIndex(p => {\r\n      //p is mean parameter name from person\r\n      return p.id === id\r\n    })\r\n\r\n    //copy sperson aray by index id\r\n    const perosnNew = {\r\n      ...this.state.person[perosIndex]\r\n    }\r\n\r\n    //set value\r\n    perosnNew.name = event.target.value\r\n\r\n    //compy person type aray\r\n    const person = [...this.state.person]\r\n\r\n    //set values by index id\r\n    person[perosIndex] = perosnNew\r\n\r\n\r\n    //set state\r\n    this.setState({ person: person })\r\n\r\n  }\r\n\r\n  render() {\r\n    // this are css in line\r\n    const colorBtn = {\r\n      color: 'green',\r\n      backgroundColor: 'yellow',\r\n      ':hover': {\r\n        backgroundColor: 'red',\r\n        color: 'yellow'\r\n      }\r\n    }\r\n\r\n    let person = null\r\n    let Assignment = null\r\n\r\n    if (this.state.isShowDiv) {\r\n      person = (\r\n        <div>\r\n          {this.state.person.map((person, index) => {\r\n            return <Person\r\n              name={person.name}\r\n              click={() => this.onChickDelete(index)}\r\n              key={person.id}\r\n              change={(event) => this.onChangeName(event, person.id)} />\r\n          })}\r\n        </div>\r\n      )\r\n      colorBtn.backgroundColor = 'blue'\r\n      colorBtn[':hover'] = {\r\n        backgroundColor: 'lightblue',\r\n        color: 'black'\r\n      }\r\n\r\n    }\r\n\r\n    const charList = this.state.inputValues.split('').map((ch, index) => {\r\n      return <CharCard varchar={ch} key={index} delete={() => this.onChickDeleteCard(index)} />\r\n    })\r\n\r\n    if (this.state.isShowAssignment) {\r\n      Assignment = (\r\n        <div>\r\n          <p>Show assignment</p>\r\n          <input\r\n            type='text'\r\n            onChange={this.inputChangeHendler}\r\n            value={this.state.inputValues} />\r\n          <p>{this.state.inputValues}</p>\r\n          <Validate textLength={this.state.inputValues.length} />\r\n          {charList}\r\n        </div>\r\n      )\r\n      colorBtn.backgroundColor = 'red'\r\n      colorBtn[':hover'] = {\r\n        backgroundColor: 'lightred',\r\n        color: 'black'\r\n      }\r\n    }\r\n\r\n    //let classes = ['red','bold'].join(' ')\r\n    const classes = []\r\n    if (this.state.person.length <= 2) {\r\n      classes.push(css.red)\r\n    }\r\n    if (this.state.inputValues.length > 5) {\r\n      classes.push(css.bold)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <p className={classes.join(' ')}>Hello world</p>\r\n        <button style={colorBtn} key=\"1\" onClick={this.onClickShowDiv}>Show Div</button>\r\n        <button style={colorBtn} onClick={this.onClickShowAssignment}>Show Assignment</button>\r\n        {person}\r\n        {Assignment}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './MasterPage/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1vqTB\",\"App-logo\":\"App_App-logo__26u38\",\"App-logo-spin\":\"App_App-logo-spin__3vzbW\",\"App-header\":\"App_App-header__3cXPs\",\"App-link\":\"App_App-link__1SBqe\",\"red\":\"App_red__1TPgQ\",\"bold\":\"App_bold__5Sbrr\"};"],"sourceRoot":""}